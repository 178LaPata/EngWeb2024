var http = require('http')
var fs = require('fs')
var url = require('url')
var axios = require('axios')

function gerarFilmes(filmes){
    pagHTML = `
<!DOCTYPE html>
<html>
    <head>
        <title>Filmes</title>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="/w3.css">
        <meta charset="utf-8"/>
    </head>
    <body>
        <div class="w3-card-4">
            <header class="w3-container w3-blue">
                <h1>Lista de Filmes</h1>
            </header>
            
            <div class="w3-container">
                <ul class="w3-ul">
    `
    filmes.forEach( filme => {
        pagHTML += `
            <li><a href='/filmes/${filme._id.$oid}'>${filme.title}</a></li>
        `
    });
    pagHTML += `
    </table>
                </ul>
            </div>
            <footer class="w3-container w3-blue">
                <h5>Generated by TPC3App::EngWeb2024::a95454</h5>
            </footer>
        </div>
    </body>
</html>
    `
    return pagHTML
}

function gerarPagFilme(id, filme){
    var f = filme.find(f => f._id.$oid == id)
    pagHTML = `
<!DOCTYPE html>
<html>
    <head>
        <title>Filme</title>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="/w3.css">
        <meta charset="utf-8"/>
    </head>
    <body>
        <div class="w3-card-4">
            <header class="w3-container w3-blue">
                <h1>${f.title}</h1>
            </header>
            
            <div class="w3-container">
                <p><b>ID:</b> ${f._id.$oid}</p>
                <p><b>Ano:</b> ${f.year}</p>
                <p><b>Genero:</b> ${f.genres}</p>
                <p><b>Actores:</b> ${f.cast}</p>
            </div>
            <footer class="w3-container w3-blue">
                <h5>Generated by TPC3App::EngWeb2024::a95454</h5>
            </footer>
        </div>
    </body>
</html>
    `
    return pagHTML
}

function gerarGeneros(generos){
    var pagHTML = `
<!DOCTYPE html>
<html>
    <head>
        <title>Generos</title>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="/w3.css">
        <meta charset="utf-8"/>
    </head>
    <body>
        <div class="w3-card-4">
            <header class="w3-container w3-blue">
                <h1>Lista de Generos</h1>
            </header>

            <div class="w3-container">
                <ul class="w3-ul">
    `;


    generos.forEach(g => {
        pagHTML += `<li><a href="/genero/${g.genero}">${g.genero}</a></li>`;
    });

    pagHTML += `
                </ul>
            </div>
            <footer class="w3-container w3-blue">
                <h5>Generated by TPC3App::EngWeb2024::a95454</h5>
            </footer>
        </div>
    </body>
</html>
    `;
    return pagHTML;
}

function gerarPagGeneros(genero, generos){
    var pagHTML = `
<!DOCTYPE html>
<html>
    <head>
        <title>${genero}</title>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="/w3.css">
        <meta charset="utf-8"/>
    </head>
    <body>
        <div class="w3-card-4">
            <header class="w3-container w3-blue">
                <h1>Filmes de ${genero}</h1>
            </header>

            <div class="w3-container">
                <ul class="w3-ul">
    `;
    generos.forEach(g => {
        if(g.genero == genero){
            g.filmes.forEach(f => {
                pagHTML += `<li><a href="/filmes/${f.id}">${f.titulo}</a></li>`;
            });
        }
    });
    pagHTML += `
                </ul>
            </div>
            <footer class="w3-container w3-blue">
                <h5>Generated by TPC3App::EngWeb2024::a95454</h5>
            </footer>
        </div>
    </body>
</html>
    `;
    return pagHTML;
}

function gerarAtores(atores){
    var pagHTML = `
<!DOCTYPE html>
<html>
    <head>
        <title>Atores</title>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="/w3.css">
        <meta charset="utf-8"/>
    </head>
    <body>
        <div class="w3-card-4">
            <header class="w3-container w3-blue">
                <h1>Lista de Atores</h1>
            </header>
            <div class="w3-container">
                <ul class="w3-ul">
    `;
    atores.forEach(a => {
        pagHTML += `<li><a href="/atores/${a.ator}">${a.ator}</a></li>`;
    });
    pagHTML += `
                </ul>
            </div>
            <footer class="w3-container w3-blue">
                <h5>Generated by TPC3App::EngWeb2024::a95454</h5>
            </footer>
        </div>
    </body>
</html>
    `;
    return pagHTML;
}

function gerarPagAtores(ator, atores){
    var pagHTML = `
<!DOCTYPE html>
<html>
    <head>
        <title>${ator}</title>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="/w3.css">
        <meta charset="utf-8"/>
    </head>
    <body>
        <div class="w3-card-4">
            <header class="w3-container w3-blue">
                <h1>Filmes de ${ator}</h1>
            </header>

            <div class="w3-container">
                <ul class="w3-ul">
    `;
    atores.forEach(a => {
        if(a.ator == ator){
            a.filmes.forEach(f => {
                pagHTML += `<li><a href="/filmes/${f.id}">${f.titulo}</a></li>`;
            });
        }
    }
    );
    pagHTML += `
                </ul>
            </div>
            <footer class="w3-container w3-blue">
                <h5>Generated by TPC3App::EngWeb2024::a95454</h5>
            </footer>
        </div>
    </body>
</html>
    `;
    return pagHTML;
}

http.createServer(function (req, res) {
    var regex = /^\/filmes\/\w+$/
    var regex2 = /^\/genero\/[a-zA-Z]+$/
    var regex3 = /^\/atores\/.*$/
    var q = url.parse( req.url, true)
    if(q.pathname == '/'){
        fs.readFile('home-page.html', function(erro, dados) {
            res.writeHead(200, {'Content-Type': 'text/html'})
            res.write(dados)
            res.end()
        })
    }
    else if(q.pathname == '/filmes'){
        axios.get('http://localhost:3000/filmes')
            .then(function(resp){
                dados = resp.data
                pagHTML = gerarFilmes(dados)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML)
                res.end()
            })
            .catch(function(erro){
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write("<pre>" + erro + "</pre>")
                res.end()
            })
    }        
    else if(regex.test(q.pathname)){
        axios.get('http://localhost:3000/filmes')
            .then(function(resp){
                dados = resp.data
                id = q.pathname.substring(8)
                pagHTML = gerarPagFilme(id, dados)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML)
                res.end()
            })
            .catch(function(erro){
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write("<pre>" + erro + "</pre>")
                res.end()
            })
    }
    else if (q.pathname == '/generos'){
        axios.get('http://localhost:3000/generos')
            .then(function(resp){
                dados = resp.data
                pagHTML = gerarGeneros(dados)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML)
                res.end()
            })
            .catch(function(erro){
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write("<pre>" + erro + "</pre>")
                res.end()
            })
    }
    else if(regex2.test(q.pathname)){
        axios.get('http://localhost:3000/generos')
            .then(function(resp){
                dados = resp.data
                genero = q.pathname.substring(8)
                pagHTML = gerarPagGeneros(genero, dados)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML)
                res.end()
            })
            .catch(function(erro){
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write("<pre>" + erro + "</pre>")
                res.end()
            })
    }
    else if(q.pathname == '/atores'){
        axios.get('http://localhost:3000/atores')
            .then(function(resp){
                dados = resp.data
                pagHTML = gerarAtores(dados)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML)
                res.end()
            })
            .catch(function(erro){
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write("<pre>" + erro + "</pre>")
                res.end()
            })
    }
    else if(regex3.test(q.pathname)){
        axios.get('http://localhost:3000/atores')
            .then(function(resp){
                dados = resp.data
                ator = decodeURIComponent(q.pathname.substring(8))
                pagHTML = gerarPagAtores(ator, dados)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML)
                res.end()
            })
            .catch(function(erro){
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write("<pre>" + erro + "</pre>")
                res.end()
            })
    }
    
    else if(q.pathname == '/w3.css'){
        fs.readFile('w3.css', function(erro, dados) {
            res.writeHead(200, {'Content-Type': 'text/css'})
            res.write(dados)
            res.end()
        })
    }
    else{
        res.writeHead(400, {'Content-Type': 'text/html; charset=utf-8'})
        res.write('<p>Erro: pedido não suportado.</p>')
        res.write('<pre>' + q.pathname + '</pre>')
        res.end()
    }
    console.log(q.pathname)
}).listen(7777)